{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","onChange","event","target","value","showAlert","backgroundColor","toUpperCase","split","length","prototypes","title","PropTypes","string","aboutText","defaultProps","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efd76735.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { checkPropTypes } from \"prop-types\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\n                Home\n              </a>\n            </li>\n            {/* <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">\n                About\n              </a>\n            </li> */}\n          </ul>\n          {/* <form className=\"d-flex\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n\n          <div\n            className={`form-check form-switch text-${\n              props.mode === \"light\" ? \"dark\" : \"light\"\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.toggleMode}\n            />\n            <label\n              className=\"form-check-label\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Enable DarkMode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.prototypes = {\n  title: PropTypes.string,\n  aboutText: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  title: \"abouttext\",\n};\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    setText(text.toUpperCase());\n  };\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n    props.showAlert(\"Converted to uppercase\", \"success\");\n  };\n\n  const [text, setText] = useState(\"Enter text here\");\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1> {props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            rows=\"8\"\n            onChange={handleOnChange}\n            value={text}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n            }}\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\n          Convert to uppercase\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1>Your text summary</h1>\n        <p>\n          {text.split(\" \").length} words and {text.length} characters{\" \"}\n        </p>\n        <p> {0.08 * text.split(\" \").length} Minutes to read</p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n  const capitalize = (word) => {\n    const lower = word.toLowerCase;\n    return lower.chartAt(0).toUpperCase() + lower.slice(1);\n  };\n\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type}  fade show`}\n        role=\"alert\"\n      >\n        <strong> {props.alert.type}</strong>: {props.alert.msg}\n      </div>\n    )\n  );\n}\n\nexport default Alert;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode == \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been activated\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been activated\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n        <TextForm\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n          showAlert={showAlert}\n        />\n        {/* </Route>\n          </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}